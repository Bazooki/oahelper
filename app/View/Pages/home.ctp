<?php
/**
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.View.Pages
 * @since         CakePHP(tm) v 0.10.0.1076
 */
?>

    <div class="QR">
        <?php
			if(!empty($baseJpg)) {
				echo '<br><h2 style="text-align: center">Scan this QR code to join your WeChat Official Account:</h2>';
				echo '<img src="data:image/jpeg;base64,' . $baseJpg . '" />';
			}else{
				echo '<h2 style="text-align: center">Unable to generate a QR code, possibly due to a timeout. Please try again in a minute or two<h2>';

			}
		?>
    </div>

<?php


if (!Configure::read('debug') > 0){


	if (AuthComponent::user()) {

		echo('<h1 class="notice" style="text-align: center">Please enable debug in your app/Config/core.php if you wish to view diagnostic information, or: ' . $this->Html->link('Access the admin platform', array('controller' => 'admin_users', 'action' => 'dash', 'admin' => true), array('target' => 'blank')) . '</h1>');

	} else {

		echo('<h1 class="notice" style="text-align: center">Please enable debug in your app/Config/core.php if you wish to view diagnostic information, or: ' . $this->Html->link('Log in', array('controller' => 'admin_users', 'action' => 'login', 'admin' => true), array('target' => 'blank')) . '</h1>');

	}

}

else{
App::uses('Debugger', 'Utility');

	if (AuthComponent::user()) {

		echo('<h1 class="notice" style="text-align: center">Please disable debug in your app/Config/core.php if you wish to hide diagnostic information, or: ' . $this->Html->link('Access the admin platform', array('controller' => 'admin_users', 'action' => 'dash', 'admin' => true), array('target' => 'blank')) . '</h1>');

	} else {

		echo('<h1 class="notice" style="text-align: center">Please disable debug in your app/Config/core.php if you wish to hide diagnostic information, or: ' . $this->Html->link('Log in', array('controller' => 'admin_users', 'action' => 'login', 'admin' => true), array('target' => 'blank')) . '</h1>');

	}

?>

		<h3><?php echo __d('cake_dev', 'Easily set up your WeChat OA Builder for use by doing the following:'); ?></h3>
		<br>

		<ol>
			<li><?php echo 'Create a database on your MySQL server.'?></li>
			<li><?php echo 'Insert the log-in details in your "/app/Config/database.php" file, under the public $local variable, check if your database is accessible below; you should see: "CakePHP is able to connect to the database."'?></li>
			<li><?php echo 'Create an apache virtual host pointing to your source code.'?></li>
			<li><?php echo 'Set up your "cake" executable using this link:';
						echo $this->Html->link('CakePHP console tutorial','http://book.cakephp.org/2.0/en/console-and-shells.html',  array('target'=> 'blank'))
			?></li>
			<li><?php echo 'Creating your database tables is simple and automated using CakePHP Schema files; Navigate to "your_source_code/app/" using your Terminal or Cmd and type: "cake schema create -s", type "yes" for all prompts. This creates the tables with all the necessary details for you using the schema.php file under Config/Schema.'?></li>
			<br><i><ul style="color: red;text-align: center"> <?php echo 'The WeChat OA software needs four tables; "admin_users","followers", "menus" and "xml_logs". Please ensure that they exist before proceeding. '?></ul></i>
			<br><br><li><h4><?php echo 'Log in to the WeChat OA software using the username and password generated by the schema: Username: "admin", Password: "password".'?></h4></li>
			<li><?php echo 'Take note of the URL, App ID, and App Secret values, and enter them in step 10 if you are using the Chinese Sandbox Environment'?></li>
			<br><br><br><li><?php echo 'Log into the '. $this->Html->link('Chinese Sandbox environment', 'https://mp.weixin.qq.com/debug/sandbox', array('target' => 'blank')) . ' (or '.$this->Html->link('admin.wechat.com', 'https://admin.wechat.com', array('target' => 'blank')) . ' if you already have an account!)'  ?></li>
			<br><li><?php echo 'Scan the QR code using WeChat, and remember to turn translate on!'?></li>
			<br><i><ul style="color: red;text-align: center"> <?php echo 'Important: remember to change the domain to your chosen host, keeping the URL we entered for you may cause problems.'?></ul></i>
			<br><li> <?php echo ' Change your App ID, App Secret values in: "/app/Config/core.php. The token can be changed to a string of your choice." '?></li>
			<br><li> <?php echo ' Change the URL using the value presented to you in the dashboard, your token must also be changed to the value you defined in app/Config/core.php '?></li>
			<br><li><?php echo 'Click submit once you are certain the details are correct. The API will then communicate with the ResponderController using the URL you specified. If the communication is successful, you will receive a green "configuration success" message, if not, check your URL; make sure you included "/responder/"  '?></li>
			<br><li><?php echo 'Scan your QR code found on this page using WeChat. You will be taken to your Official Account. Try it out! Type in a few keywords, or try "news". '?></li>
			<li><?php echo 'Once you are ready to customize your OA (Official Acount) - Click on "Log in" and log in using the default username ("admin") and password ("password"), remember to create your own account and delete this to stay secure! '?></li>
			<li><?php echo 'Congratulations! You have logged in and are now ready to customize your own WeChat Official Account! Please refer to the documentation below if you get stuck. '?></li>
			<br><br<ul style="color: blue;"> <?php echo 'Have fun!'?></ul>
			<br><br>
		</ol>

		<h3><?php echo __d('cake_dev', 'WeChat Documentation'); ?></h3>


		<li>
			<?php echo 'You can access the (Chinese) sandbox environment here: '.$this->Html->link('https://mp.weixin.qq.com/debug/sandbox','https://mp.weixin.qq.com/debug/sandbox', array('target' => 'blank')). ' (The English Sandbox environment is currently being rebuilt.)' ?>
			<br><br>
		<ul>
			<?php echo 'Simply click on green log in button and scan the QR code using WeChat. On your device, confirm the WeChat security login page by pressing the green button  to link your user account to the Sandbox test account. Once done the Website will refresh and supply you with an appID and app secret. Enter your Url and token to proceed. Scan the QR code on the page to test your official (sandbox) account. You can have up to 20 followers on a sandbox account '?>
		</li></ul>
			<br><br>
		<li>
			<?php echo 'You can access the official wiki here: '.$this->Html->link('http://admin.wechat.com/wiki/index.php?title=Main_Page', 'http://admin.wechat.com/wiki/index.php?title=Main_Page',  array('target' => 'blank'))?>
		</li>
		<br><br>
		<li>
		<?php echo 'Access the developer FAQ here:  '.$this->Html->link('http://wechatsa.com/faq/categories/view/4', 'http://wechatsa.com/faq/categories/view/4',  array('target' => 'blank'))?>
		</li>
		<br>


		<?php
		if (Configure::read('debug') > 0):
			Debugger::checkSecurityKeys();
		endif;
		?>
		<?php if (file_exists(WWW_ROOT . 'css' . DS . 'cake.generic.css')): ?>
			<p id="url-rewriting-warning" style="background-color:#e32; color:#fff;">
				<?php echo __d('cake_dev', 'URL rewriting is not properly configured on your server.'); ?>
				1) <a target="_blank" href="http://book.cakephp.org/2.0/en/installation/url-rewriting.html" style="color:#fff;">Help me configure it</a>
				2) <a target="_blank" href="http://book.cakephp.org/2.0/en/development/configuration.html#cakephp-core-configuration" style="color:#fff;">I don't / can't use URL rewriting</a>
			</p>
		<?php endif; ?>
		<p>
		<?php
		if (version_compare(PHP_VERSION, '5.2.8', '>=')):
			echo '<span class="notice success">';
				echo __d('cake_dev', 'Your version of PHP is 5.2.8 or higher.');
			echo '</span>';
		else:
			echo '<span class="notice">';
				echo __d('cake_dev', 'Your version of PHP is too low. You need PHP 5.2.8 or higher to use CakePHP.');
			echo '</span>';
		endif;
		?>
		</p>
		<p>
			<?php
			if (is_writable(TMP)):
				echo '<span class="notice success">';
					echo __d('cake_dev', 'Your tmp directory is writable.');
				echo '</span>';
			else:
				echo '<span class="notice">';
					echo __d('cake_dev', 'Your tmp directory is NOT writable.');
				echo '</span>';
			endif;
			?>
		</p>
		<p>
			<?php
			$settings = Cache::settings();
			if (!empty($settings)):
				echo '<span class="notice success">';
					echo __d('cake_dev', 'The %s is being used for core caching. To change the config edit %s', '<em>' . $settings['engine'] . 'Engine</em>', 'APP/Config/core.php');
				echo '</span>';
			else:
				echo '<span class="notice">';
					echo __d('cake_dev', 'Your cache is NOT working. Please check the settings in %s', 'APP/Config/core.php');
				echo '</span>';
			endif;
			?>
		</p>
		<p>
			<?php
			$filePresent = null;
			if (file_exists(APP . 'Config' . DS . 'database.php')):
				echo '<span class="notice success">';
					echo __d('cake_dev', 'Your database configuration file is present.');
					$filePresent = true;
				echo '</span>';
			else:
				echo '<span class="notice">';
					echo __d('cake_dev', 'Your database configuration file is NOT present.');
					echo '<br/>';
					echo __d('cake_dev', 'Rename %s to %s', 'APP/Config/database.php.default', 'APP/Config/database.php');
				echo '</span>';
			endif;
			?>
		</p>
		<?php
		if (isset($filePresent)):
			App::uses('ConnectionManager', 'Model');
			try {
				$connected = ConnectionManager::getDataSource('default');
			} catch (Exception $connectionError) {
				$connected = false;
				$errorMsg = $connectionError->getMessage();
				if (method_exists($connectionError, 'getAttributes')):
					$attributes = $connectionError->getAttributes();
					if (isset($errorMsg['message'])):
						$errorMsg .= '<br />' . $attributes['message'];
					endif;
				endif;
			}
			?>
			<p>
				<?php
					if ($connected && $connected->isConnected()):
						echo '<span class="notice success">';
							echo __d('cake_dev', 'CakePHP is able to connect to the database.');
						echo '</span>';
					else:
						echo '<span class="notice">';
							echo __d('cake_dev', 'CakePHP is NOT able to connect to the database.');
							echo '<br /><br />';
							echo $errorMsg;
						echo '</span>';
					endif;
				?>
			</p>
		<?php
		endif;

		App::uses('Validation', 'Utility');
		if (!Validation::alphaNumeric('cakephp')):
			echo '<p><span class="notice">';
				echo __d('cake_dev', 'PCRE has not been compiled with Unicode support.');
				echo '<br/>';
				echo __d('cake_dev', 'Recompile PCRE with Unicode support by adding <code>--enable-unicode-properties</code> when configuring');
			echo '</span></p>';
		endif;
		?>

		<p>
			<?php
			if (CakePlugin::loaded('DebugKit')):
				echo '<span class="notice success">';
					echo __d('cake_dev', 'DebugKit plugin is present');
				echo '</span>';
			else:
				echo '<span class="notice">';
					echo __d('cake_dev', 'DebugKit is not installed. It will help you inspect and debug different aspects of your application.');
					echo '<br/>';
					echo __d('cake_dev', 'You can install it from %s', $this->Html->link('GitHub', 'https://github.com/cakephp/debug_kit'));
				echo '</span>';
			endif;
			?>
		</p>

		<h3><?php echo __d('cake_dev', 'Release Notes for CakePHP %s.', Configure::version()); ?></h3>
		<p>
			<?php echo $this->Html->link(__d('cake_dev', 'Read the changelog'), 'http://cakephp.org/changelogs/' . Configure::version()); ?>
		</p>
		<h3><?php echo __d('cake_dev', 'Editing this Page'); ?></h3>
		<p>
		<?php
		echo __d('cake_dev', 'To change the content of this page, edit: %s.<br />
		To change its layout, edit: %s.<br />
		You can also add some CSS styles for your pages at: %s.',
			'APP/View/Pages/home.ctp', 'APP/View/Layouts/default.ctp', 'APP/webroot/css');
		?>
		</p>

		<h3><?php echo __d('cake_dev', 'Getting Started'); ?></h3>
		<p>
			<?php
			echo $this->Html->link(
				sprintf('<strong>%s</strong> %s', __d('cake_dev', 'New'), __d('cake_dev', 'CakePHP 2.0 Docs')),
				'http://book.cakephp.org/2.0/en/',
				array('target' => '_blank', 'escape' => false)
			);
			?>
		</p>
		<p>
			<?php
			echo $this->Html->link(
				__d('cake_dev', 'The 15 min Blog Tutorial'),
				'http://book.cakephp.org/2.0/en/tutorials-and-examples/blog/blog.html',
				array('target' => '_blank', 'escape' => false)
			);
			?>
		</p>

		<h3><?php echo __d('cake_dev', 'Official Plugins'); ?></h3>
		<p>
		<ul>
			<li>
				<?php echo $this->Html->link('DebugKit', 'https://github.com/cakephp/debug_kit') ?>:
				<?php echo __d('cake_dev', 'provides a debugging toolbar and enhanced debugging tools for CakePHP applications.'); ?>
			</li>
			<li>
				<?php echo $this->Html->link('Localized', 'https://github.com/cakephp/localized') ?>:
				<?php echo __d('cake_dev', 'contains various localized validation classes and translations for specific countries'); ?>
			</li>
		</ul>
		</p>

		<h3><?php echo __d('cake_dev', 'More about CakePHP'); ?></h3>
		<p>
		<?php echo __d('cake_dev', 'CakePHP is a rapid development framework for PHP which uses commonly known design patterns like Active Record, Association Data Mapping, Front Controller and MVC.'); ?>
		</p>
		<p>
		<?php echo __d('cake_dev', 'Our primary goal is to provide a structured framework that enables PHP users at all levels to rapidly develop robust web applications, without any loss to flexibility.'); ?>
		</p>

		<ul>
			<li><a href="http://cakephp.org">CakePHP</a>
			<ul><li><?php echo __d('cake_dev', 'The Rapid Development Framework'); ?></li></ul></li>
			<li><a href="http://book.cakephp.org"><?php echo __d('cake_dev', 'CakePHP Documentation'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Your Rapid Development Cookbook'); ?></li></ul></li>
			<li><a href="http://api.cakephp.org"><?php echo __d('cake_dev', 'CakePHP API'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Quick API Reference'); ?></li></ul></li>
			<li><a href="http://bakery.cakephp.org"><?php echo __d('cake_dev', 'The Bakery'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Everything CakePHP'); ?></li></ul></li>
			<li><a href="http://plugins.cakephp.org"><?php echo __d('cake_dev', 'CakePHP Plugins'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'A comprehensive list of all CakePHP plugins created by the community'); ?></li></ul></li>
			<li><a href="http://community.cakephp.org"><?php echo __d('cake_dev', 'CakePHP Community Center'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Everything related to the CakePHP community in one place'); ?></li></ul></li>
			<li><a href="https://groups.google.com/group/cake-php"><?php echo __d('cake_dev', 'CakePHP Google Group'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Community mailing list'); ?></li></ul></li>
			<li><a href="irc://irc.freenode.net/cakephp">irc.freenode.net #cakephp</a>
			<ul><li><?php echo __d('cake_dev', 'Live chat about CakePHP'); ?></li></ul></li>
			<li><a href="https://github.com/cakephp/"><?php echo __d('cake_dev', 'CakePHP Code'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Find the CakePHP code on GitHub and contribute to the framework'); ?></li></ul></li>
			<li><a href="https://github.com/cakephp/cakephp/issues"><?php echo __d('cake_dev', 'CakePHP Issues'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'CakePHP Issues'); ?></li></ul></li>
			<li><a href="https://github.com/cakephp/cakephp/wiki#roadmaps"><?php echo __d('cake_dev', 'CakePHP Roadmaps'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'CakePHP Roadmaps'); ?></li></ul></li>
			<li><a href="http://training.cakephp.org"><?php echo __d('cake_dev', 'Training'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Join a live session and get skilled with the framework'); ?></li></ul></li>
			<li><a href="http://cakefest.org"><?php echo __d('cake_dev', 'CakeFest'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Don\'t miss our annual CakePHP conference'); ?></li></ul></li>
			<li><a href="http://cakefoundation.org"><?php echo __d('cake_dev', 'Cake Software Foundation'); ?> </a>
			<ul><li><?php echo __d('cake_dev', 'Promoting development related to CakePHP'); ?></li></ul></li>
		</ul>
<?php } ?>